# -*- Makefile -*- 
# Generic makefile for IMSL, MKL, blas/lapack, and FORTRAN libraries
# Generic makefile Tao's and Daniel's C routines 
# Generic makefile for various machines

# MACHINE
#USE_HOME=USE_HOME
#USE_LAPTOP=USE_LAPTOP 
USE_WORK_64=USE_WORK_64
#USE_WORK_32=USE_WORK_32
#USE_WULF=USE_WULF

# LIBRARIES SUPPORTED
#USE_TZ = USE_TZ
USE_DW = USE_DW
  #USE_DW_MATRIX = USE_DW_MATRIX
  #USE_DW_ERROR = USE_DW_ERROR
  #USE_DW_ARRAY = USE_DW_ARRAY
  #USE_DW_ASCII = USE_DW_ASCII
  USE_DW_STAT = USE_DW_STAT
  #USE_DW_SORT = USE_DW_SORT
  #USE_DW_ELLIPTICAL = USE_DW_ELLIPTICAL
  #USE_DW_HISTO = USE_DW_HISTO
  #USE_DW_MATH = USE_DW_MATH
  #USE_DW_SWITCH = USE_DW_SWITCH
  #USE_DW_STATE_SPACE = USE_DW_STATE_SPACE
USE_MKL = USE_MKL
USE_NPSOL = USE_NPSOL 
USE_FORTRAN = USE_FORTRAN
#USE_ATLAS = USE_ATLAS
#USE_IMSL = USE_IMSL
#USE_LAPACK = USE_LAPACK
#USE_FORTRAN = USE_FORTRAN
#USE_PTHREAD = USE_PTHREAD
USE_MATH = USE_MATH
USE_GSL = USE_GSL
#USE_GSL_CBLAS = USE_GSL_CBLAS
#USE_BOOST = USE_BOOST
#USE_MYSQL_CPP_CONN = USE_MYSQL_CPP_CONN
#USE_LOG4CXX = USE_LOG4CXX

BASE_DIR = $(HOME)/DW_TZ_GIT

CC = gcc
CPP = g++
CFLAGS = -g
#CFLAGS = -O3 -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses
#CFLAGS = -g -static -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses
#CFLAGS = -static -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses -O3
#CFLAGS = -g -static
#CFLAGS =  -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses

MAKEFILE_DIR = $(BASE_DIR)/projects_dw

include $(MAKEFILE_DIR)/make_machines_master
include $(MAKEFILE_DIR)/make_libraries_master

#LIBS_DIR := $(LIBS_DIR) -L$(NPSOL_LIB) 
#LIBS := $(LIBS) -lnpsol_f77 -llssol_f77 -lgfortran
#################################################################################
# PROJECT PATHS
MATH_INCLUDE_DIR = $(BASE_DIR)/utilities_dw/include
MATH_DIR = $(BASE_DIR)/utilities_dw/math
MATRIX_DIR = $(BASE_DIR)/utilities_dw/matrix/cpp
PROJECT_DIR = $(HOME)/state_model/mssm
GENERIC_SRC_DIR = $(PROJECT_DIR)/generic
TEST_SRC_DIR = $(PROJECT_DIR)/test 
EXE_DIR = $(PROJECT_DIR)/work
BUILD_DIR = $(PROJECT_DIR)/work

INCLUDE_DIR := $(INCLUDE_DIR) -I$(MATH_INCLUDE_DIR) -I$(MATRIX_DIR) -I$(GENERIC_SRC_DIR) -I$(TEST_SRC_DIR)
VPATH := $(VPATH) $(MATH_DIR) $(MATRIX_DIR) $(GENERIC_SRC_DIR) $(TEST_SRC_DIR) $(BUILD_DIR) $(EXE_DIR)

# MATRIX FILES #####################################################################
MATRIX_OBJS = dw_dense_matrix.o dw_utilities.o dw_rand_gsl.o dw_math.o

# PROJECT FILES
GENERIC_OBJS = CMSSM.o CMSSM_StateEquation.o CMSSM_MeasurementEquation.o CMSSM_ValidInitialPoint.o CMSSM_KalmanFilter.o #CMSSM_CheckSolution.o

TEST_OBJS = findequilibrium.o CMakeABPsiPiC_ststm1.o CTransitionMatrix_test.o MakeLbUb_ststm1.o #gensys_1stregime.o

# OUTPUT
TEST_EFILE = $(EXE_DIR)/findequilibrium


#################################################################################
all : TEST_EXEC

TEST_EXEC : $(TEST_EFILE)

$(TEST_EFILE): $(MATRIX_OBJS) $(GENERIC_OBJS) $(TEST_OBJS)
	$(CPP) $(CFLAGS) $^ $(LIBS_DIR) $(LIBS) -lpthread -o $(TEST_EFILE)

%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@
%.o : %.cpp
	$(CPP) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@

#################################################################################
clean:
	rm -f $(EXE_DIR)/*.o
	rm -f $(BUILD_DIR)/*.o
#
#################################################################################
test:
	echo "EXE_DIR: $(EXE_DIR)"
	echo "BUILD_DIR: $(BUILD_DIR)"
	echo "VPATH: $(VPATH)"
	echo "INCLUDE_DIR: $(INCLUDE_DIR)"
	echo "LIBS_DIR: $(LIBS_DIR)"
	echo "OBJS: $(OBJS)"
	echo "TEST_OBJS: $(TEST_OBJS)"
	echo "CC: $(CC)"
	echo "MKL_LIBS: $(MKL_LIBS)"
